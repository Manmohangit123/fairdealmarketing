{"ast":null,"code":"const express = require(\"express\");\nconst QRCode = require(\"qrcode\");\nconst Product = require(\"../models/Product\");\nconst auth = require(\"../authMiddleware\"); // JWT middleware\nconst router = express.Router();\n\n// Validate Aptos address\nfunction isValidAptosAddress(address) {\n  return /^0x[a-f0-9]{64}$/.test(address);\n}\n\n// Add Product (Middleman only)\nrouter.post(\"/add\", auth, async (req, res) => {\n  const {\n    name,\n    description,\n    price,\n    manufacturerAddress,\n    mfg_bps,\n    mm_bps,\n    image\n  } = req.body;\n\n  // Middleman address comes from authenticated user\n  const middlemanAddress = req.userWallet;\n\n  // Validate middleman\n  if (req.userRole !== \"middleman\") {\n    return res.status(403).json({\n      error: \"Only middleman can add products\"\n    });\n  }\n  if (!isValidAptosAddress(manufacturerAddress)) {\n    return res.status(400).json({\n      error: \"Invalid Manufacturer Address\"\n    });\n  }\n  if (!isValidAptosAddress(middlemanAddress)) {\n    return res.status(400).json({\n      error: \"Invalid Middleman Address\"\n    });\n  }\n  if ((mfg_bps || 8000) + (mm_bps || 2000) !== 10000) {\n    return res.status(400).json({\n      error: \"Split must total 10000 basis points (100%)\"\n    });\n  }\n  try {\n    const qrData = `product:${name}|price:${price}|mm:${middlemanAddress}`;\n    const qrCode = await QRCode.toDataURL(qrData);\n    const product = await Product.create({\n      name,\n      description,\n      price,\n      manufacturerAddress,\n      middlemanAddress,\n      mfg_bps: mfg_bps || 8000,\n      mm_bps: mm_bps || 2000,\n      image,\n      qrCode\n    });\n    res.json(product);\n  } catch (err) {\n    console.error(err);\n    res.status(500).json({\n      error: \"Failed to create product\"\n    });\n  }\n});\n\n// Get all products (for customers)\nrouter.get(\"/\", async (req, res) => {\n  const products = await Product.find({}, {\n    middlemanAddress: 0\n  }); // hide middleman for customers\n  res.json(products);\n});\nmodule.exports = router;","map":{"version":3,"names":["express","require","QRCode","Product","auth","router","Router","isValidAptosAddress","address","test","post","req","res","name","description","price","manufacturerAddress","mfg_bps","mm_bps","image","body","middlemanAddress","userWallet","userRole","status","json","error","qrData","qrCode","toDataURL","product","create","err","console","get","products","find","module","exports"],"sources":["C:/Users/somen/OneDrive/Desktop/marketing/client/src/pages/MiddlemanDashboard.js"],"sourcesContent":["const express = require(\"express\");\r\nconst QRCode = require(\"qrcode\");\r\nconst Product = require(\"../models/Product\");\r\nconst auth = require(\"../authMiddleware\"); // JWT middleware\r\nconst router = express.Router();\r\n\r\n// Validate Aptos address\r\nfunction isValidAptosAddress(address) {\r\n  return /^0x[a-f0-9]{64}$/.test(address);\r\n}\r\n\r\n// Add Product (Middleman only)\r\nrouter.post(\"/add\", auth, async (req, res) => {\r\n  const { name, description, price, manufacturerAddress, mfg_bps, mm_bps, image } = req.body;\r\n\r\n  // Middleman address comes from authenticated user\r\n  const middlemanAddress = req.userWallet;\r\n\r\n  // Validate middleman\r\n  if (req.userRole !== \"middleman\") {\r\n    return res.status(403).json({ error: \"Only middleman can add products\" });\r\n  }\r\n\r\n  if (!isValidAptosAddress(manufacturerAddress)) {\r\n    return res.status(400).json({ error: \"Invalid Manufacturer Address\" });\r\n  }\r\n  if (!isValidAptosAddress(middlemanAddress)) {\r\n    return res.status(400).json({ error: \"Invalid Middleman Address\" });\r\n  }\r\n\r\n  if ((mfg_bps || 8000) + (mm_bps || 2000) !== 10000) {\r\n    return res.status(400).json({ error: \"Split must total 10000 basis points (100%)\" });\r\n  }\r\n\r\n  try {\r\n    const qrData = `product:${name}|price:${price}|mm:${middlemanAddress}`;\r\n    const qrCode = await QRCode.toDataURL(qrData);\r\n\r\n    const product = await Product.create({\r\n      name,\r\n      description,\r\n      price,\r\n      manufacturerAddress,\r\n      middlemanAddress,\r\n      mfg_bps: mfg_bps || 8000,\r\n      mm_bps: mm_bps || 2000,\r\n      image,\r\n      qrCode\r\n    });\r\n\r\n    res.json(product);\r\n  } catch (err) {\r\n    console.error(err);\r\n    res.status(500).json({ error: \"Failed to create product\" });\r\n  }\r\n});\r\n\r\n// Get all products (for customers)\r\nrouter.get(\"/\", async (req, res) => {\r\n  const products = await Product.find({}, { middlemanAddress: 0 }); // hide middleman for customers\r\n  res.json(products);\r\n});\r\n\r\nmodule.exports = router;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}